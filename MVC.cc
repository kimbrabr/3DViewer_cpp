/* Паттерн MVC (MOdel-View-Contrtoller)*/
/* Model - отвечает за данные и бизнес логику(загрука и обработка
данных)
   Controller - принимает от пользователя команды
   и передает их модели
   View - отвечает за отображение данных(UI)
   В итоге цепочка полбзователь взаимодействует интерфейсом
   (View) дальше передает команду (Controller) и обновляет
   данные в (Model) сообщает об изменениях (View) получает
   обновленные данные и перерисовывает интерфейс
*/
/* Сам код будет так
   Model (обрабатываем и храним данные)
   Controller (перемещение, масштабирование и вращение)
   View (выводим на экран)
*/
/* Зачем другие паттерны, если есть MVC
   MVC - общая структура а другие паттерны решают более конткретные
   задачи внутри нее. Они улучшают как части MVC работают с
   друг другом
*/
/* Фасад - это как упрощеное окошко для сложной системы.
   Прячем сложный код за простым интерфейсом
   Загрузка и обработка OBJ файла сложный процесс если
   засунем в модел то слишком толстым будет отдельно сделаем
*/
/* s21::ObjLoader будет фассадом спрячем его за проствм интерфейсом  */
/* Команда - это способ превратить действие в отдельный объект
   вместо того чтобы сразу делать создаем задание которрое можно
   выполнить позже*/

/* Есть машина (модель), кнопки на модели (представление)
   и бортовой компьютер (контроллер)
   Фасад - это завести двигатель  не знаете как именно заводиться
   но он работает
   Команда - повернуть руль компьютер отправляет задание
   рулю а не крутить его сам команды с заданием и делает контроллер
   тонким (он только отправляет команды, а не выполняет работу сам)
*/

// требования были минимум три паттерна

/* Другие популярные паттерны
   Стратегия - (менять способы сортитровки быстрая пузырковая
   не переписывая код)
   Наблюдатель - (если бы модель сообщала после каждого
   вращения сообщала что повернулся я)
   Одиночка - (если была бы одна настройка глобальная для всех
   моделей например масштаб)
   Адаптер - (Если бы obj файл был в другом формате)
   Строитель - (если бы модель надо было создавать с разными
   параметрами)
   Фабрика - (были бы разные модели кубы сферы )
   */
